@using IFS.DB.WebApp.Models.Batch

<div class="modal-layout" id="ModalSuccess" style="display:block!important">
    <div class="modal-scroll">
        <div class="modal-background" onclick="onTriggerModalSuccess()"></div>
        <div class="batch-modal-layout">
            <div class="batch-modal">
                <div class="batch-modal-header-wrapper">
                    <div class="batch-modal-header">
                        <p class="batch-modal-header__title">@(BatchName) Batch was submitted</p>
                        <div class="batch-modal-header__icon" onclick="@Close">
                            <img class="icon" src="/img/icons/closeIcon.svg" alt="close"/>
                            <img class="iconHover" src="/img/icons/closeIconHover.svg" alt="close"/>
                        </div>
                    </div>
                    <p class="batch-modal-header__subtitle">
                        This Batch needs confirmation from your collegues. You can find it in the [Awaiting Signature] section.
                        We will notify you once it will be confirmed
                    </p>
                </div>

                <div class="batch-modal-footer">
                    <button class="batch-modal-footer__buttonSuccess" onclick="@Close()">Ok</button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {

    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; } = default!;

    [Parameter, EditorRequired]
    public string BatchName { get; set; } = default!;
    
    private async Task Close()
    {
        await BlazoredModal.CloseAsync(ModalResult.Cancel());
        _navigateManager.NavigateTo("/maintenance");
    }

}