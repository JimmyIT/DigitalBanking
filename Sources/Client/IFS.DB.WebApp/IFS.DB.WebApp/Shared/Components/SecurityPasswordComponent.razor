@using IFS.DB.WebApp.Models.Security
@using IFS.DB.WebApp.Models
@using Humanizer
@using IFS.DB.OpenAPI.Client.Clients.MoveAMLToDataCapture
<div class="security-main-content check" id="Locks">
    <p class="security-main-content-title">Password Locks</p>
    <div class="formgroup security-main-content-selector">
        <label>Batch User Reference</label>
        <div class="select-layout">
            @* <select class="select" id="batchSelector" onChange="updateBatchSelectorValue()"> *@
            @*     <option value="clear"  selected>Select a User</option> *@
            @*     <option value="payeeReference1">[User reference 1]</option> *@
            @*     <option value="payeeReference2">[User reference 2]</option> *@
            @*     <option value="payeeReference3">[User reference 3]</option> *@
            @*     <option value="payeeReference4">[User reference 4]</option> *@
            @* </select> *@

            <DropdownComponent TItem="PasswordBatchModel?"
                               OnSelectedItem="@OnSelectedValue"
                               InlineStyle="margin-right: 12px; margin-bottom: 12px"
                               ButtonSelectInlineStyle="width:100%;">
                <InitialTip>@(_passwordBatchSelected?.UserReference ?? "Select here")</InitialTip>
                <DropdownChildContent>
                    @foreach (var item in _passwordBatches ?? Enumerable.Empty<PasswordBatchModel>())
                    {
                        <DropdownItemComponent Item="@item" Context="_">
                            <DropdownItemChildContent>@item.UserReference</DropdownItemChildContent>
                        </DropdownItemComponent>
                    }
                </DropdownChildContent>
            </DropdownComponent>

        </div>
    </div>

    <div class="security-main-content-info">
        <div class="security-main-content-info-item">
            <p class="security-main-content-info-item-label">Current status of Batch</p>
            @if (_passwordBatchSelected?.Status is PasswordBatchStatus.Locked)
            {
                <div class="security-main-content-info-item-body security-main-content-info-item-body--locked" id="currentBody">
                    <img src="/img/security/lockedIcon.svg" alt="locked" id="locked"/>
                    <p id="current">Locked</p>
                </div>
            }
            @if (_passwordBatchSelected?.Status is PasswordBatchStatus.Unlocked)
            {
                <div class="security-main-content-info-item-body security-main-content-info-item-body--success" id="currentBody">
                    <img src="/img/security/unlockedIcon.svg" alt="locked" id="locked"/>
                    <p id="current">Unlocked</p>
                </div>
            }
            @if (_passwordBatchSelected is null)
            {
                <div class="security-main-content-info-item-body" id="currentBody">
                    <p id="current">--</p>
                </div>
            }
        </div>

        <div class="security-main-content-info-item">
            <p class="security-main-content-info-item-label">Last Access by</p>
            <p class="security-main-content-info-item-body" id="access">@(_passwordBatchSelected?.LassAccessBy ?? "--")</p>
        </div>

        <div class="security-main-content-info-item">
            <p class="security-main-content-info-item-label">Last Process on</p>
            <p class="security-main-content-info-item-body" id="process">@(_passwordBatchSelected?.LastProcessOn.ToFullDateTimeFormat() ?? "--")</p>
        </div>
    </div>

    <hr class="security-main-content-line"/>

    <div class="security-main-content-footer">
        @if (_saved)
        {
            <div class="security-main-content-footer-saved" id="saved">
                <img src="/img/icons/checkIcon.svg" alt="check"/>
                <p class="security-main-content-footer-saved-name">Updates were saved</p>
            </div>
        }
        <button class="security-main-content-footer-button @(_saved || _passwordBatchSelected is null ? "security-main-content-footer-button--inactive" : "")" @onclick="UnlockBatch" id="default">Unlock batch</button>
    </div>
</div>

@code {

    [CascadingParameter]
    public IModalService ModalSvc { get; set; } = default!;
    
    private List<PasswordBatchModel> _passwordBatches;

    private PasswordBatchModel? _passwordBatchSelected;

    private bool _saved;

    protected override void OnInitialized()
    {
        _passwordBatches = FakeData.PasswordBatches.Where(x => x.Status == PasswordBatchStatus.Locked).ToList();
    }

    private void OnSelectedValue(PasswordBatchModel? selectedValue)
    {
        _passwordBatchSelected = selectedValue;
        _saved = false;
    }

    private async Task UnlockBatch()
    {
        if (_passwordBatchSelected is null)
            return;
        
        IModalReference confirmModal = ModalSvc.Show<SimplePasswordConfirmModalComponent>(
            string.Empty,
            new ModalParameters
            {
                { nameof(SimplePasswordConfirmModalComponent.HeaderTitle), $"Submit MSE Authority Code" },
                { nameof(SimplePasswordConfirmModalComponent.HeaderSubtitle), "Please enter your password to submit MSE Authority Code" },
                { nameof(SimplePasswordConfirmModalComponent.ConfirmText), "Submit" }
            },
            new ModalOptions
            {
                UseCustomLayout = true
            });

        ModalResult modelResult = await confirmModal.Result;

        if (modelResult.Confirmed is false)
            return;

        _passwordBatchSelected.Status = PasswordBatchStatus.Unlocked;
        _passwordBatchSelected.LassAccessBy = "Admin2";
        _passwordBatchSelected.LastProcessOn = DateTime.Now;

        var index = FakeData.PasswordBatches.FindIndex(x => x.Id == _passwordBatchSelected.Id);

        FakeData.PasswordBatches[index] = _passwordBatchSelected with {};
        _saved = true;

        _passwordBatches = FakeData.PasswordBatches.Where(x => x.Status == PasswordBatchStatus.Locked).ToList();
    }

}